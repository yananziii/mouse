{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAllProduces, allowMDetailE, allowQDetailE, disallowQDetailE, disalloMDetailE, allowQDetailEAll, allowMDetailEAll } from \"../../api/api.js\";\nimport { getToken } from \"../../utils/setToken.js\";\nimport moment from \"moment\";\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        }\n      },\n      userList: [],\n      projectList: [],\n      //通过的参数\n      allowData: {\n        work_num: 22222222,\n        power: \"e\"\n      },\n      //多选框\n      multipleSelection: [],\n      mulShow: true,\n      examineShow: true,\n      //项目名称搜索框\n      searchTime: \"\",\n      state: 2,\n      names: \"\",\n      //驳回框表单\n      rejectForm: [],\n      //驳回原因\n      reject: \"\",\n      // 总条数\n      totalCount: 0,\n      // 默认显示第几页\n      currentPage: 1,\n      // 个数选择器\n      pageSizes: [10, 20],\n      // 默认每页显示的条数\n      PageSize: 10,\n      //控制驳回对话框的显示与隐藏\n      disallowVisible: false,\n      //控制添加表单加班输入框的显示与隐藏\n      overFlag: 0,\n      //控制添加表非标输入框的显示与隐藏\n      noMarkFlag: 0,\n      //控制修改表单加班输入框的显示与隐藏\n      overFlagE: 0,\n      //审批状态筛选\n      StateList: [{\n        value: 2,\n        label: \"待审批\"\n      }, {\n        value: 0,\n        label: \"已通过\"\n      }, {\n        value: 1,\n        label: \"未通过\"\n      }],\n      overListF: [{\n        value: 0,\n        label: \"是\"\n      }],\n      overListT: [{\n        value: 1,\n        label: \"否\"\n      }],\n      accList: [{\n        value: 1,\n        label: \"否\"\n      }, {\n        value: 0,\n        label: \"是\"\n      }],\n      //添加明细表单的表单数据\n      addForm: {\n        work_num: \"\",\n        data_time: \"\",\n        project_name: \"\",\n        project_role: \"\",\n        work_overtime: \"\",\n        account: \"\",\n        mark_time: 0,\n        mark_number: 0,\n        quality_time: 0,\n        quality_number: 0,\n        test_mark_time: 0,\n        traing_time: 0,\n        question_time: 0,\n        data_process_time: 0,\n        analyse_time: 0,\n        other_time: 0,\n        loss_time: 0,\n        note: \"\",\n        over_mark_time: 0,\n        over_mark_number: 0,\n        over_quality_time: 0,\n        over_quality_number: 0,\n        over_test_mark_time: 0,\n        over_traing_time: 0,\n        over_question_time: 0,\n        over_data_process_time: 0,\n        over_analyse_time: 0,\n        over_other_time: 0,\n        over_loss_time: 0,\n        over_note: \"\",\n        noMark: \"\"\n      },\n      //添加表单的验证规则对象\n      addFormRules: {\n        data_time: [{\n          required: true,\n          message: \"工作日期为必填项！\",\n          trigger: \"blur\"\n        }],\n        project_name: [{\n          required: true,\n          message: \"项目名称为必填项！\",\n          trigger: \"blur\"\n        }],\n        project_role: [{\n          required: true,\n          message: \"项目角色为必填项！\",\n          trigger: \"blur\"\n        }],\n        work_overtime: [{\n          required: true,\n          message: \"是否加班为必填项！\",\n          trigger: \"blur\"\n        }],\n        noMark: [{\n          required: true,\n          message: \"是否有常班非标为必填项！\",\n          trigger: \"blur\"\n        }],\n        account: [{\n          required: true,\n          message: \"是否需要核算绩效为必填项！\",\n          trigger: \"blur\"\n        }],\n        mark_time: [{\n          required: true,\n          message: \"标注工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        mark_number: [{\n          required: true,\n          message: \"标注工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        quality_time: [{\n          required: true,\n          message: \"质检工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        quality_number: [{\n          required: true,\n          message: \"质检工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        test_mark_time: [{\n          required: true,\n          message: \"试标工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        traing_time: [{\n          required: true,\n          message: \"非标-培训工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        question_time: [{\n          required: true,\n          message: \"非标-答疑工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        data_process_time: [{\n          required: true,\n          message: \"非标-数据处理工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        analyse_time: [{\n          required: true,\n          message: \"非标-复盘工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        other_time: [{\n          required: true,\n          message: \"非标-其他工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        loss_time: [{\n          required: true,\n          message: \"工损工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_mark_time: [{\n          required: true,\n          message: \"加班-标注工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_mark_number: [{\n          required: true,\n          message: \"加班-标注工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_quality_time: [{\n          required: true,\n          message: \"加班-质检工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_quality_number: [{\n          required: true,\n          message: \"加班-质检工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_test_mark_time: [{\n          required: true,\n          message: \"加班-试标工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_traing_time: [{\n          required: true,\n          message: \"加班-非标-培训工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_question_time: [{\n          required: true,\n          message: \"加班-非标-答疑工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_data_process_time: [{\n          required: true,\n          message: \"加班-非标-数据处理工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_analyse_time: [{\n          required: true,\n          message: \"加班-非标-复盘工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_other_time: [{\n          required: true,\n          message: \"加班-非标-其他工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        over_loss_time: [{\n          required: true,\n          message: \"加班-工损工时为必填项！\",\n          trigger: \"blur\"\n        }]\n      },\n      //控制修改明细表单对话框的显示隐藏\n      editDialogVisible: false,\n      //查询的明细表单信息对象\n      editId: 0,\n      editForm: {\n        id: \"\",\n        data_time: \"\",\n        project_name: \"\",\n        project_role: \"\",\n        work_overtime: \"\",\n        account: \"\",\n        mark_time: 0,\n        mark_number: 0,\n        quality_time: 0,\n        quality_number: 0,\n        test_mark_time: 0,\n        traing_time: 0,\n        question_time: 0,\n        data_process_time: 0,\n        analyse_time: 0,\n        other_time: 0,\n        loss_time: 0,\n        note: 0,\n        over_mark_time: 0,\n        over_mark_number: 0,\n        over_quality_time: 0,\n        over_quality_number: 0,\n        over_test_mark_time: 0,\n        over_traing_time: 0,\n        over_question_time: 0,\n        over_data_process_time: 0,\n        over_analyse_time: 0,\n        over_other_time: 0,\n        over_loss_time: 0,\n        over_note: \"\"\n      },\n      //添加修改的验证规则对象\n      eidtFormRules: {\n        project_role: [{\n          required: true,\n          message: \"项目角色为必填项！\",\n          trigger: \"blur\"\n        }],\n        project_name: [{\n          required: true,\n          message: \"项目名称为必填项！\",\n          trigger: \"blur\"\n        }],\n        mark_time: [{\n          required: true,\n          message: \"标注工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        mark_number: [{\n          required: true,\n          message: \"标注工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        quality_time: [{\n          required: true,\n          message: \"质检工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        quality_number: [{\n          required: true,\n          message: \"质检工作量为必填项！\",\n          trigger: \"blur\"\n        }],\n        test_mark_time: [{\n          required: true,\n          message: \"试标工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        traing_time: [{\n          required: true,\n          message: \"培训工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        question_time: [{\n          required: true,\n          message: \"答疑工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        data_process_time: [{\n          required: true,\n          message: \"数据处理工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        analyse_time: [{\n          required: true,\n          message: \"复盘工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        other_time: [{\n          required: true,\n          message: \"非标其他工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        loss_time: [{\n          required: true,\n          message: \"工损工时为必填项！\",\n          trigger: \"blur\"\n        }],\n        work_category: [{\n          required: true,\n          message: \"班次类别为必填项！\",\n          trigger: \"blur\"\n        }],\n        data_time: [{\n          required: true,\n          message: \"工作日期为必填项！\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.id = JSON.parse(getToken(\"work_num\"));\n    this.addForm.work_num = JSON.parse(getToken(\"work_num\"));\n    /*     this.token = JSON.parse(getToken(\"admin_token\")); */\n    this.getList();\n  },\n  methods: {\n    //获取多选框的值\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //控制多选框列及审批列的显示隐藏\n    mulToT() {\n      this.mulShow = true;\n      this.examineShow = true;\n      this.search();\n    },\n    mulToF() {\n      this.mulShow = false;\n      this.examineShow = false;\n      this.search();\n    },\n    //查询所有表单\n    getList() {\n      getAllProduces(this.id, this.currentPage, this.PageSize, this.state, this.names).then(res => {\n        if (res.data.ret == 0) {\n          this.userList = res.data.data_list;\n          this.totalCount = res.data.total;\n          this.work_num = res.data.work_num;\n          this.power = res.data.permission;\n        }\n      });\n    },\n    handleSizeChange(val) {\n      // 改变每页显示的条数\n      this.PageSize = val;\n      // 注意：在改变每页显示的条数时，要将页码显示到第一页\n      this.currentPage = 1;\n      // 点击每页显示的条数时，显示第一页\n      this.getList();\n    },\n    handleCurrentChange(val) {\n      // 改变默认的页数\n      this.currentPage = val;\n      // 切换页码时，要获取每页显示的条数\n      this.getList();\n    },\n    search() {\n      this.currentPage = 1;\n      this.getList();\n    },\n    filterO(value, row) {\n      return row.work_overtime == value;\n    },\n    filterA(value, row) {\n      return row.account == value;\n    },\n    toDetailE(id) {\n      this.$router.push({\n        path: \"DetailE\",\n        query: {\n          id: id\n        }\n      });\n    },\n    //数字类型获取当前日期(数字类型)\n    getNowDate() {\n      let nowTime = moment().format(\"YYYY-MM-DD\").replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, \"\");\n      let nowTimeN = Number(nowTime);\n      /*  console.log(nowTimeN);   */\n      return nowTimeN;\n    },\n    //获取当天是几月份\n    getNowMonth() {\n      let date = new Date();\n      let month = date.getMonth() + 1;\n      /*   console.log(month); */\n      return month;\n    },\n    //获取当天是周几\n    getNowWeek() {\n      let now = new Date();\n      let day = now.getDay();\n      /*  console.log(day); */\n      return day;\n    },\n    //工作日期字符串转换成数字类型\n    dateToNumber(date) {\n      let dateFilter = date.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, \"\");\n      let dateNumber = Number(dateFilter);\n      /*       console.log(dateNumber); */\n      return dateNumber;\n    },\n    //获取工作日期是几月\n    getWorkDateMonth(workDate) {\n      let month = workDate.split(\"-\")[1];\n      let monthNum = Number(month);\n      /*      console.log(monthNum); */\n      return monthNum;\n    },\n    //获取工作日期的日\n    getWorkDateDay(workDate) {\n      let Day = workDate.split(\"-\")[2];\n      let DayNum = Number(Day);\n      /*       console.log(DayNum); */\n      return DayNum;\n    },\n    //同月-通过是周几判断最多修改几天前的数据\n    dataSub(week, nowDate, workDate) {\n      if (week == 1 && nowDate - workDate > 3) {\n        return false;\n      } else if (week == 2 && nowDate - workDate > 4) {\n        return false;\n      } else if (week == 3 && nowDate - workDate > 5) {\n        return false;\n      } else if (week == 4 && nowDate - workDate > 6) {\n        return false;\n      } else if (week == 5 && nowDate - workDate > 7) {\n        return false;\n      } else if (week == 6 && nowDate - workDate > 1) {\n        return false;\n      } else if (week == 7 && nowDate - workDate > 2) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    //跨月判断\n    //获取上个月最后一个周五\n    getLastFriday() {\n      var date = new Date();\n      /*    console.log(date.getTime()); */\n      var weekday = date.getDay();\n      let lastFriday = new Date(date.getTime() - 1000 * 60 * 60 * 24 * (weekday + 2));\n      /*       console.log(lastFriday); */\n      return lastFriday;\n    },\n    //不同月\n    dataArray(workDate) {\n      let now = new Date();\n      let nowMonth = now.getMonth() + 1;\n      let nowDate = now.getDate();\n      console.log(nowDate);\n      if (Number(nowDate) != 1) {\n        return false;\n      } else {\n        let nowNum = Number(nowMonth + \"\" + nowDate);\n        var arr = new Array();\n        arr.push(nowNum);\n        let lastFriday = this.getLastFriday();\n        let lastFridayMonth = lastFriday.getMonth() + 1;\n        let lastFridayDate = lastFriday.getDate();\n        let lastFridayNum = Number(lastFridayMonth + \"\" + lastFridayDate);\n        /*       console.log(lastFridayNum); */\n\n        let date = now.getDate();\n        let lastDay = new Date(now.setDate(date - 1)); //获取前一天\n        /*     console.log(lastDay); */\n        let lastDayMonth = lastDay.getMonth() + 1;\n        let lastDayDate = lastDay.getDate();\n        let lastDayNum = Number(lastDayMonth + \"\" + lastDayDate);\n        /*       console.log(lastDayNum); */\n        for (var i = lastFridayNum; i <= lastDayNum; i++) {\n          arr.push(i);\n        }\n        console.log(arr);\n        if (arr.indexOf(workDate) == -1) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    },\n    //同意审批\n    allowList(work_num, power, order_id, state1, state2, data_time) {\n      var nowDate = this.getNowDate();\n      var nowMonth = this.getNowMonth();\n      var nowWeek = this.getNowWeek();\n      var workDate = this.dateToNumber(data_time);\n      var workMonth = this.getWorkDateMonth(data_time);\n      var workDay = this.getWorkDateDay(data_time);\n      var workNum = Number(workMonth + \"\" + workDay);\n      console.log(workNum);\n      console.log(nowMonth);\n      if (nowMonth != workMonth) {\n        if (this.dataArray(workNum)) {\n          var date = new Date();\n          var year = date.getFullYear();\n          var dateArr = [date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n          var strDate = year + \"/\" + dateArr[0] + \"/\" + dateArr[1] + \" \" + dateArr[2] + \":\" + dateArr[3] + \":\" + dateArr[4];\n          //如果是质控专家\n          if (power == \"e\") {\n            if (state1 == 2) {\n              allowQDetailE(work_num, order_id, strDate).then(res => {\n                if (res.data.ret == 0) {\n                  this.getList();\n                }\n              });\n            } else {\n              this.$message.error(\"不可操作！\");\n            }\n            //如果是项目经理\n          } else {\n            if (state1 == 0 && state2 == 2) {\n              allowMDetailE(work_num, order_id, strDate).then(res => {\n                if (res.data.ret == 0) {\n                  this.getList();\n                }\n              });\n            } else {\n              this.$message.error(\"不可操作！\");\n            }\n          }\n        } else {\n          this.$message(\"已超过审批DDL！\");\n        }\n      } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n        var date = new Date();\n        var year = date.getFullYear();\n        var dateArr = [date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n        var strDate = year + \"/\" + dateArr[0] + \"/\" + dateArr[1] + \" \" + dateArr[2] + \":\" + dateArr[3] + \":\" + dateArr[4];\n        //如果是质控专家\n        if (power == \"e\") {\n          if (state1 == 2) {\n            allowQDetailE(work_num, order_id, strDate).then(res => {\n              if (res.data.ret == 0) {\n                this.getList();\n              }\n            });\n          } else {\n            this.$message.error(\"不可操作！\");\n          }\n          //如果是项目经理\n        } else {\n          if (state1 == 0 && state2 == 2) {\n            allowMDetailE(work_num, order_id, strDate).then(res => {\n              if (res.data.ret == 0) {\n                this.getList();\n              }\n            });\n          } else {\n            this.$message.error(\"不可操作！\");\n          }\n        }\n      } else {\n        this.$message(\"已超过审批DDL！\");\n      }\n    },\n    //展示驳回表单\n    showRejectList(order_id, state1, state2, data_time) {\n      var nowDate = this.getNowDate();\n      var nowMonth = this.getNowMonth();\n      var nowWeek = this.getNowWeek();\n      var workDate = this.dateToNumber(data_time);\n      var workMonth = this.getWorkDateMonth(data_time);\n      var workDay = this.getWorkDateDay(data_time);\n      var workNum = Number(workMonth + \"\" + workDay);\n      if (nowMonth != workMonth) {\n        if (this.dataArray(workNum)) {\n          this.disallowVisible = true;\n          this.rejectForm.order_id = order_id;\n          this.rejectForm.state1 = state1;\n          this.rejectForm.state2 = state2;\n        } else {\n          this.$message(\"已超过审批DDL！\");\n        }\n      } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n        this.disallowVisible = true;\n        this.rejectForm.order_id = order_id;\n        this.rejectForm.state1 = state1;\n        this.rejectForm.state2 = state2;\n      } else {\n        this.$message(\"已超过审批DDL！\");\n      }\n    },\n    //驳回审批\n    disallowList() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var dateArr = [date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n      var strDate = year + \"/\" + dateArr[0] + \"/\" + dateArr[1] + \" \" + dateArr[2] + \":\" + dateArr[3] + \":\" + dateArr[4];\n      if (this.power == \"e\") {\n        if (this.rejectForm.state1 == 2 && this.reject != \"\") {\n          disallowQDetailE(this.id, this.rejectForm.order_id, strDate, this.reject).then(res => {\n            if (res.data.ret == 0) {\n              //关闭对话框\n              this.disallowVisible = false;\n              this.getList();\n              this.$message.success(\"操作成功！\");\n            }\n          });\n        } else {\n          this.$message.error(\"无法操作！\");\n        }\n      } else {\n        if (this.rejectForm.state1 == 0 && this.rejectForm.state2 == 2 && this.reject != \"\") {\n          disalloMDetailE(this.id, this.rejectForm.order_id, strDate, this.reject).then(res => {\n            if (res.data.ret == 0) {\n              //关闭对话框\n              this.disallowVisible = false;\n              this.getList();\n              this.$message.success(\"操作成功！\");\n            } else {\n              this.$message.error(\"无法操作！\");\n            }\n          });\n        }\n      }\n    },\n    //同意审批批量\n    allowListAll(work_num, power) {\n      var date = new Date();\n      var year = date.getFullYear();\n      var dateArr = [date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n      var strDate = year + \"/\" + dateArr[0] + \"/\" + dateArr[1] + \" \" + dateArr[2] + \":\" + dateArr[3] + \":\" + dateArr[4];\n      if (power == \"e\") {\n        let total = this.multipleSelection.length;\n        //console.log(total）\n        var allList = new Array();\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].state1 == 2) {\n            var nowDate = this.getNowDate();\n            var nowMonth = this.getNowMonth();\n            var nowWeek = this.getNowWeek();\n            var workDate = this.dateToNumber(this.multipleSelection[i].data_time);\n            var workMonth = this.getWorkDateMonth(this.multipleSelection[i].data_time);\n            var workDay = this.getWorkDateDay(this.multipleSelection[i].data_time);\n            var workNum = Number(workMonth + \"\" + workDay);\n            if (nowMonth != workMonth) {\n              if (this.dataArray(workNum)) {\n                allList.push({\n                  order_id: this.multipleSelection[i].order_id,\n                  approver1: this.id,\n                  state1: 0,\n                  cause1: \"\",\n                  appro_date1: strDate\n                });\n              }\n            } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n              allList.push({\n                order_id: this.multipleSelection[i].order_id,\n                approver1: this.id,\n                state1: 0,\n                cause1: \"\",\n                appro_date1: strDate\n              });\n            }\n          }\n        }\n        allowQDetailEAll(work_num, allList, total).then(res => {\n          if (res.data.ret == 0) {\n            this.getList();\n            this.$message.success(\"已更新\");\n          }\n        });\n      } else {\n        let total = this.multipleSelection.length;\n        //console.log(total）\n        var allList = new Array();\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].state1 == 0 && this.multipleSelection[i].state2 == 2) {\n            var nowDate = this.getNowDate();\n            var nowMonth = this.getNowMonth();\n            var nowWeek = this.getNowWeek();\n            var workDate = this.dateToNumber(this.multipleSelection[i].data_time);\n            var workMonth = this.getWorkDateMonth(this.multipleSelection[i].data_time);\n            var workDay = this.getWorkDateDay(this.multipleSelection[i].data_time);\n            var workNum = Number(workMonth + \"\" + workDay);\n            if (nowMonth != workMonth) {\n              if (this.dataArray(workNum)) {\n                allList.push({\n                  order_id: this.multipleSelection[i].order_id,\n                  approver1: this.id,\n                  state2: 0,\n                  cause2: \"\",\n                  appro_date1: strDate\n                });\n              }\n            } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n              allList.push({\n                order_id: this.multipleSelection[i].order_id,\n                approver1: this.id,\n                state2: 0,\n                cause2: \"\",\n                appro_date1: strDate\n              });\n            }\n          }\n        }\n        allowMDetailEAll(work_num, allList, total).then(res => {\n          if (res.data.ret == 0) {\n            this.getList();\n            this.$message.success(\"已更新\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["getAllProduces","allowMDetailE","allowQDetailE","disallowQDetailE","disalloMDetailE","allowQDetailEAll","allowMDetailEAll","getToken","moment","data","pickerOptions","disabledDate","time","getTime","Date","now","userList","projectList","allowData","work_num","power","multipleSelection","mulShow","examineShow","searchTime","state","names","rejectForm","reject","totalCount","currentPage","pageSizes","PageSize","disallowVisible","overFlag","noMarkFlag","overFlagE","StateList","value","label","overListF","overListT","accList","addForm","data_time","project_name","project_role","work_overtime","account","mark_time","mark_number","quality_time","quality_number","test_mark_time","traing_time","question_time","data_process_time","analyse_time","other_time","loss_time","note","over_mark_time","over_mark_number","over_quality_time","over_quality_number","over_test_mark_time","over_traing_time","over_question_time","over_data_process_time","over_analyse_time","over_other_time","over_loss_time","over_note","noMark","addFormRules","required","message","trigger","editDialogVisible","editId","editForm","id","eidtFormRules","work_category","created","JSON","parse","getList","methods","handleSelectionChange","val","mulToT","search","mulToF","then","res","ret","data_list","total","permission","handleSizeChange","handleCurrentChange","filterO","row","filterA","toDetailE","$router","push","path","query","getNowDate","nowTime","format","replace","nowTimeN","Number","getNowMonth","date","month","getMonth","getNowWeek","day","getDay","dateToNumber","dateFilter","dateNumber","getWorkDateMonth","workDate","split","monthNum","getWorkDateDay","Day","DayNum","dataSub","week","nowDate","getLastFriday","weekday","lastFriday","dataArray","nowMonth","getDate","console","log","nowNum","arr","Array","lastFridayMonth","lastFridayDate","lastFridayNum","lastDay","setDate","lastDayMonth","lastDayDate","lastDayNum","i","indexOf","allowList","order_id","state1","state2","nowWeek","workMonth","workDay","workNum","year","getFullYear","dateArr","getHours","getMinutes","getSeconds","strDate","$message","error","showRejectList","disallowList","success","allowListAll","length","allList","approver1","cause1","appro_date1","cause2"],"sources":["src/components/Expert/Produces.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card>\n      <!--     面包屑导航 -->\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/Notice' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>团队管理</el-breadcrumb-item>\n        <el-breadcrumb-item>组内生产</el-breadcrumb-item>\n      </el-breadcrumb>\n      <el-row :gutter=\"0\" class=\"emp-top\">\n        <el-col :span=\"22\" class=\"emp-top-des\"> 生产数据 </el-col>\n        <el-col :span=\"2\" class=\"emp-top-add\">\n          <el-button\n            type=\"danger\"\n            @click=\"allowListAll(id, power)\"\n            size=\"mini\"\n            v-if=\"mulShow\"\n            >批量同意</el-button\n          >\n        </el-col>\n      </el-row>\n    </el-card>\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row :gutter=\"40\">\n        <el-col :span=\"10\" class=\"emp-data-des\"> 表单 </el-col>\n        <el-col :span=\"5\">\n          <el-date-picker\n      v-model=\"searchTime\"\n      type=\"date\"\n      placeholder=\"选择日期时间\"\n      size=\"mini\"\n      :clearable=true\n      :picker-options=\"pickerOptions\"\n      >\n    </el-date-picker>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-select v-model=\"state\" size=\"mini\" placeholder=\"请选择状态\">\n            <el-option\n              label=\"待审批\"\n              :value=\"2\"\n              @click.native=\"mulToT\"\n            ></el-option>\n            <el-option\n              label=\"未通过\"\n              :value=\"1\"\n              @click.native=\"mulToF\"\n            ></el-option>\n            <el-option\n              label=\"已通过\"\n              :value=\"0\"\n              @click.native=\"mulToF\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-input\n            placeholder=\"员工姓名\"\n            v-model=\"names\"\n            @keyup.enter.native=\"search\"\n            size=\"mini\"\n            clearable\n          >\n          </el-input>\n        </el-col>\n      </el-row>\n      <!-- 个人明细列表区域 -->\n      <el-table\n        :data=\"userList\"\n        stripe\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" min-width=\"10%\"> </el-table-column>\n        <el-table-column\n          label=\"工单id\"\n          prop=\"order_id\"\n          min-width=\"10%\"\n        ></el-table-column>\n        <el-table-column\n          label=\"员工姓名\"\n          prop=\"first_name\"\n          min-width=\"10%\"\n        ></el-table-column>\n        <el-table-column label=\"工作日期\" prop=\"data_time\" min-width=\"15%\">\n        </el-table-column>\n\n        <el-table-column\n          label=\"项目名称\"\n          prop=\"project_name\"\n          min-width=\"25%\"\n        ></el-table-column>\n        <el-table-column\n          label=\"项目角色\"\n          prop=\"project_role\"\n          min-width=\"10%\"\n        ></el-table-column>\n        <el-table-column prop=\"work_overtime\" label=\"是否加班\" min-width=\"10%\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.work_overtime == 0\">是</span>\n            <span v-if=\"scope.row.work_overtime == 1\">否</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"account\"\n          label=\"是否需要核算绩效\"\n          min-width=\"18%\"\n        >\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.account == 0\">是</span>\n            <span v-if=\"scope.row.account == 1\">否</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column\n          label=\"总工时\"\n          prop=\"sum_time\"\n          min-width=\"10%\"\n        ></el-table-column>\n        <el-table-column\n          label=\"总工作量\"\n          prop=\"sum_number\"\n          min-width=\"10%\"\n        ></el-table-column>\n        <el-table-column prop=\"state1\" label=\"第一审批人状态\" min-width=\"15%\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.state1 == 0\">已通过</span>\n            <span v-if=\"scope.row.state1 == 1\">未通过</span>\n            <span v-if=\"scope.row.state1 == 2\">待审批</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"state2\" label=\"第二审批人状态\" min-width=\"15%\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.state2 == 0\">已通过</span>\n            <span v-if=\"scope.row.state2 == 1\">未通过</span>\n            <span v-if=\"scope.row.state2 == 2\">待审批</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"审批\" min-width=\"10%\" v-if=\"examineShow\">\n          <template slot-scope=\"scope\">\n            <span>\n              <el-button\n                size=\"mini\"\n                @click=\"\n                  allowList(\n                    id,\n                    power,\n                    scope.row.order_id,\n                    scope.row.state1,\n                    scope.row.state2,\n                    scope.row.data_time\n                  )\n                \"\n              >\n                通过</el-button\n              >\n            </span>\n            <span>\n              <el-button\n                size=\"mini\"\n                @click=\"\n                  showRejectList(\n                    scope.row.order_id,\n                    scope.row.state1,\n                    scope.row.state2,\n                    scope.row.data_time\n                  )\n                \"\n              >\n                驳回</el-button\n              >\n            </span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"详情\" width=\"50px\">\n          <template slot-scope=\"scope\">\n            <span class=\"toDetailE\" @click=\"toDetailE(scope.row.order_id)\">\n              进入\n            </span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div>\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"currentPage\"\n          :page-sizes=\"pageSizes\"\n          :page-size=\"PageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"totalCount\"\n        >\n        </el-pagination>\n      </div>\n    </el-card>\n    <!--   驳回审批对话框 -->\n    <el-dialog\n      title=\"驳回原因\"\n      :visible.sync=\"disallowVisible\"\n      width=\"50%\"\n      :close-on-click-modal=\"false\"\n    >\n      <!--   内容主体 -->\n      <el-input v-model=\"reject\"> </el-input>\n      <!--   底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"disallowVisible = false\">取 消</el-button>\n        <!--         <el-button  id= \"btn_sub\" type=\"primary\" @click=\"addList(); addButtonF()\" >确 定</el-button> -->\n        <el-button\n          id=\"btn_sub\"\n          type=\"primary\"\n          @click=\"disallowList()\"\n          v-preventReClick\n          >确 定</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getAllProduces,\n  allowMDetailE,\n  allowQDetailE,\n  disallowQDetailE,\n  disalloMDetailE,\n  allowQDetailEAll,\n  allowMDetailEAll,\n} from \"../../api/api.js\";\nimport { getToken } from \"../../utils/setToken.js\";\nimport moment from \"moment\";\n\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n                disabledDate(time) {\n                    return time.getTime() > Date.now(); \n                }\n             },\n      userList: [],\n      projectList: [],\n      //通过的参数\n      allowData: {\n        work_num: 22222222,\n        power: \"e\",\n      },\n      //多选框\n      multipleSelection: [],\n      mulShow: true,\n      examineShow: true,\n      //项目名称搜索框\n      searchTime:\"\",\n      state: 2,\n      names: \"\",\n      //驳回框表单\n      rejectForm: [],\n      //驳回原因\n      reject: \"\",\n      // 总条数\n      totalCount: 0,\n      // 默认显示第几页\n      currentPage: 1,\n      // 个数选择器\n      pageSizes: [10, 20],\n      // 默认每页显示的条数\n      PageSize: 10,\n      //控制驳回对话框的显示与隐藏\n      disallowVisible: false,\n      //控制添加表单加班输入框的显示与隐藏\n      overFlag: 0,\n      //控制添加表非标输入框的显示与隐藏\n      noMarkFlag: 0,\n      //控制修改表单加班输入框的显示与隐藏\n      overFlagE: 0,\n      //审批状态筛选\n      StateList: [\n        {\n          value: 2,\n          label: \"待审批\",\n        },\n        {\n          value: 0,\n          label: \"已通过\",\n        },\n        {\n          value: 1,\n          label: \"未通过\",\n        },\n      ],\n\n      overListF: [\n        {\n          value: 0,\n          label: \"是\",\n        },\n      ],\n      overListT: [\n        {\n          value: 1,\n          label: \"否\",\n        },\n      ],\n      accList: [\n        {\n          value: 1,\n          label: \"否\",\n        },\n        {\n          value: 0,\n          label: \"是\",\n        },\n      ],\n\n      //添加明细表单的表单数据\n      addForm: {\n        work_num: \"\",\n        data_time: \"\",\n        project_name: \"\",\n        project_role: \"\",\n        work_overtime: \"\",\n        account: \"\",\n        mark_time: 0,\n        mark_number: 0,\n        quality_time: 0,\n        quality_number: 0,\n        test_mark_time: 0,\n        traing_time: 0,\n        question_time: 0,\n        data_process_time: 0,\n        analyse_time: 0,\n        other_time: 0,\n        loss_time: 0,\n        note: \"\",\n        over_mark_time: 0,\n        over_mark_number: 0,\n        over_quality_time: 0,\n        over_quality_number: 0,\n        over_test_mark_time: 0,\n        over_traing_time: 0,\n        over_question_time: 0,\n        over_data_process_time: 0,\n        over_analyse_time: 0,\n        over_other_time: 0,\n        over_loss_time: 0,\n        over_note: \"\",\n        noMark: \"\",\n      },\n      //添加表单的验证规则对象\n      addFormRules: {\n        data_time: [\n          { required: true, message: \"工作日期为必填项！\", trigger: \"blur\" },\n        ],\n        project_name: [\n          { required: true, message: \"项目名称为必填项！\", trigger: \"blur\" },\n        ],\n        project_role: [\n          { required: true, message: \"项目角色为必填项！\", trigger: \"blur\" },\n        ],\n        work_overtime: [\n          { required: true, message: \"是否加班为必填项！\", trigger: \"blur\" },\n        ],\n        noMark: [\n          {\n            required: true,\n            message: \"是否有常班非标为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        account: [\n          {\n            required: true,\n            message: \"是否需要核算绩效为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        mark_time: [\n          { required: true, message: \"标注工时为必填项！\", trigger: \"blur\" },\n        ],\n        mark_number: [\n          { required: true, message: \"标注工作量为必填项！\", trigger: \"blur\" },\n        ],\n        quality_time: [\n          { required: true, message: \"质检工时为必填项！\", trigger: \"blur\" },\n        ],\n        quality_number: [\n          { required: true, message: \"质检工作量为必填项！\", trigger: \"blur\" },\n        ],\n        test_mark_time: [\n          { required: true, message: \"试标工时为必填项！\", trigger: \"blur\" },\n        ],\n        traing_time: [\n          {\n            required: true,\n            message: \"非标-培训工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        question_time: [\n          {\n            required: true,\n            message: \"非标-答疑工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        data_process_time: [\n          {\n            required: true,\n            message: \"非标-数据处理工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        analyse_time: [\n          {\n            required: true,\n            message: \"非标-复盘工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        other_time: [\n          {\n            required: true,\n            message: \"非标-其他工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        loss_time: [\n          { required: true, message: \"工损工时为必填项！\", trigger: \"blur\" },\n        ],\n        over_mark_time: [\n          {\n            required: true,\n            message: \"加班-标注工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_mark_number: [\n          {\n            required: true,\n            message: \"加班-标注工作量为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_quality_time: [\n          {\n            required: true,\n            message: \"加班-质检工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_quality_number: [\n          {\n            required: true,\n            message: \"加班-质检工作量为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_test_mark_time: [\n          {\n            required: true,\n            message: \"加班-试标工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_traing_time: [\n          {\n            required: true,\n            message: \"加班-非标-培训工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_question_time: [\n          {\n            required: true,\n            message: \"加班-非标-答疑工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_data_process_time: [\n          {\n            required: true,\n            message: \"加班-非标-数据处理工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_analyse_time: [\n          {\n            required: true,\n            message: \"加班-非标-复盘工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_other_time: [\n          {\n            required: true,\n            message: \"加班-非标-其他工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        over_loss_time: [\n          {\n            required: true,\n            message: \"加班-工损工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n      //控制修改明细表单对话框的显示隐藏\n      editDialogVisible: false,\n      //查询的明细表单信息对象\n      editId: 0,\n      editForm: {\n        id: \"\",\n        data_time: \"\",\n        project_name: \"\",\n        project_role: \"\",\n        work_overtime: \"\",\n        account: \"\",\n        mark_time: 0,\n        mark_number: 0,\n        quality_time: 0,\n        quality_number: 0,\n        test_mark_time: 0,\n        traing_time: 0,\n        question_time: 0,\n        data_process_time: 0,\n        analyse_time: 0,\n        other_time: 0,\n        loss_time: 0,\n        note: 0,\n        over_mark_time: 0,\n        over_mark_number: 0,\n        over_quality_time: 0,\n        over_quality_number: 0,\n        over_test_mark_time: 0,\n        over_traing_time: 0,\n        over_question_time: 0,\n        over_data_process_time: 0,\n        over_analyse_time: 0,\n        over_other_time: 0,\n        over_loss_time: 0,\n        over_note: \"\",\n      },\n      //添加修改的验证规则对象\n      eidtFormRules: {\n        project_role: [\n          { required: true, message: \"项目角色为必填项！\", trigger: \"blur\" },\n        ],\n        project_name: [\n          { required: true, message: \"项目名称为必填项！\", trigger: \"blur\" },\n        ],\n        mark_time: [\n          { required: true, message: \"标注工时为必填项！\", trigger: \"blur\" },\n        ],\n        mark_number: [\n          { required: true, message: \"标注工作量为必填项！\", trigger: \"blur\" },\n        ],\n        quality_time: [\n          { required: true, message: \"质检工时为必填项！\", trigger: \"blur\" },\n        ],\n        quality_number: [\n          { required: true, message: \"质检工作量为必填项！\", trigger: \"blur\" },\n        ],\n        test_mark_time: [\n          { required: true, message: \"试标工时为必填项！\", trigger: \"blur\" },\n        ],\n        traing_time: [\n          { required: true, message: \"培训工时为必填项！\", trigger: \"blur\" },\n        ],\n        question_time: [\n          { required: true, message: \"答疑工时为必填项！\", trigger: \"blur\" },\n        ],\n        data_process_time: [\n          {\n            required: true,\n            message: \"数据处理工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        analyse_time: [\n          { required: true, message: \"复盘工时为必填项！\", trigger: \"blur\" },\n        ],\n        other_time: [\n          {\n            required: true,\n            message: \"非标其他工时为必填项！\",\n            trigger: \"blur\",\n          },\n        ],\n        loss_time: [\n          { required: true, message: \"工损工时为必填项！\", trigger: \"blur\" },\n        ],\n        work_category: [\n          { required: true, message: \"班次类别为必填项！\", trigger: \"blur\" },\n        ],\n        data_time: [\n          { required: true, message: \"工作日期为必填项！\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n\n  created() {\n    this.id = JSON.parse(getToken(\"work_num\"));\n    this.addForm.work_num = JSON.parse(getToken(\"work_num\"));\n    /*     this.token = JSON.parse(getToken(\"admin_token\")); */\n    this.getList();\n  },\n  methods: {\n    //获取多选框的值\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //控制多选框列及审批列的显示隐藏\n    mulToT() {\n      this.mulShow = true;\n      this.examineShow = true;\n      this.search();\n    },\n    mulToF() {\n      this.mulShow = false;\n      this.examineShow = false;\n      this.search();\n    },\n    //查询所有表单\n    getList() {\n      getAllProduces(\n        this.id,\n        this.currentPage,\n        this.PageSize,\n        this.state,\n        this.names\n      ).then((res) => {\n        if (res.data.ret == 0) {\n          this.userList = res.data.data_list;\n          this.totalCount = res.data.total;\n          this.work_num = res.data.work_num;\n          this.power = res.data.permission;\n        }\n      });\n    },\n    handleSizeChange(val) {\n      // 改变每页显示的条数\n      this.PageSize = val;\n      // 注意：在改变每页显示的条数时，要将页码显示到第一页\n      this.currentPage = 1;\n      // 点击每页显示的条数时，显示第一页\n      this.getList();\n    },\n    handleCurrentChange(val) {\n      // 改变默认的页数\n      this.currentPage = val;\n      // 切换页码时，要获取每页显示的条数\n      this.getList();\n    },\n    search() {\n      this.currentPage = 1;\n      this.getList();\n    },\n    filterO(value, row) {\n      return row.work_overtime == value;\n    },\n    filterA(value, row) {\n      return row.account == value;\n    },\n    toDetailE(id) {\n      this.$router.push({\n        path: \"DetailE\",\n        query: {\n          id: id,\n        },\n      });\n    },\n    //数字类型获取当前日期(数字类型)\n    getNowDate() {\n      let nowTime = moment()\n        .format(\"YYYY-MM-DD\")\n        .replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, \"\");\n      let nowTimeN = Number(nowTime);\n      /*  console.log(nowTimeN);   */\n      return nowTimeN;\n    },\n    //获取当天是几月份\n    getNowMonth() {\n      let date = new Date();\n      let month = date.getMonth() + 1;\n      /*   console.log(month); */\n      return month;\n    },\n    //获取当天是周几\n    getNowWeek() {\n      let now = new Date();\n      let day = now.getDay();\n      /*  console.log(day); */\n      return day;\n    },\n\n    //工作日期字符串转换成数字类型\n    dateToNumber(date) {\n      let dateFilter = date.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, \"\");\n      let dateNumber = Number(dateFilter);\n      /*       console.log(dateNumber); */\n      return dateNumber;\n    },\n    //获取工作日期是几月\n    getWorkDateMonth(workDate) {\n      let month = workDate.split(\"-\")[1];\n      let monthNum = Number(month);\n      /*      console.log(monthNum); */\n      return monthNum;\n    },\n    //获取工作日期的日\n    getWorkDateDay(workDate) {\n      let Day = workDate.split(\"-\")[2];\n      let DayNum = Number(Day);\n      /*       console.log(DayNum); */\n      return DayNum;\n    },\n    //同月-通过是周几判断最多修改几天前的数据\n    dataSub(week, nowDate, workDate) {\n      if (week == 1 && nowDate - workDate > 3) {\n        return false;\n      } else if (week == 2 && nowDate - workDate > 4) {\n        return false;\n      } else if (week == 3 && nowDate - workDate > 5) {\n        return false;\n      } else if (week == 4 && nowDate - workDate > 6) {\n        return false;\n      } else if (week == 5 && nowDate - workDate > 7) {\n        return false;\n      } else if (week == 6 && nowDate - workDate > 1) {\n        return false;\n      } else if (week == 7 && nowDate - workDate > 2) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    //跨月判断\n    //获取上个月最后一个周五\n    getLastFriday() {\n      var date = new Date();\n      /*    console.log(date.getTime()); */\n      var weekday = date.getDay();\n      let lastFriday = new Date(\n        date.getTime() - 1000 * 60 * 60 * 24 * (weekday + 2)\n      );\n      /*       console.log(lastFriday); */\n      return lastFriday;\n    },\n    //不同月\n    dataArray(workDate) {\n      let now = new Date();\n      let nowMonth = now.getMonth() + 1;\n      let nowDate = now.getDate();\n      console.log(nowDate);\n      if (Number(nowDate) != 1) {\n        return false;\n      } else {\n        let nowNum = Number(nowMonth + \"\" + nowDate);\n        var arr = new Array();\n        arr.push(nowNum);\n        let lastFriday = this.getLastFriday();\n        let lastFridayMonth = lastFriday.getMonth() + 1;\n        let lastFridayDate = lastFriday.getDate();\n        let lastFridayNum = Number(lastFridayMonth + \"\" + lastFridayDate);\n        /*       console.log(lastFridayNum); */\n\n        let date = now.getDate();\n        let lastDay = new Date(now.setDate(date - 1)); //获取前一天\n        /*     console.log(lastDay); */\n        let lastDayMonth = lastDay.getMonth() + 1;\n        let lastDayDate = lastDay.getDate();\n        let lastDayNum = Number(lastDayMonth + \"\" + lastDayDate);\n        /*       console.log(lastDayNum); */\n        for (var i = lastFridayNum; i <= lastDayNum; i++) {\n          arr.push(i);\n        }\n        console.log(arr);\n        if (arr.indexOf(workDate) == -1) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    },\n\n    //同意审批\n    allowList(work_num, power, order_id, state1, state2, data_time) {\n      var nowDate = this.getNowDate();\n      var nowMonth = this.getNowMonth();\n      var nowWeek = this.getNowWeek();\n      var workDate = this.dateToNumber(data_time);\n      var workMonth = this.getWorkDateMonth(data_time);\n      var workDay = this.getWorkDateDay(data_time);\n      var workNum = Number(workMonth + \"\" + workDay);\n      console.log(workNum);\n      console.log(nowMonth);\n      if (nowMonth != workMonth) {\n        if (this.dataArray(workNum)) {\n          var date = new Date();\n          var year = date.getFullYear();\n          var dateArr = [\n            date.getMonth() + 1,\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n          ];\n          var strDate =\n            year +\n            \"/\" +\n            dateArr[0] +\n            \"/\" +\n            dateArr[1] +\n            \" \" +\n            dateArr[2] +\n            \":\" +\n            dateArr[3] +\n            \":\" +\n            dateArr[4];\n          //如果是质控专家\n          if (power == \"e\") {\n            if (state1 == 2) {\n              allowQDetailE(work_num, order_id, strDate).then((res) => {\n                if (res.data.ret == 0) {\n                  this.getList();\n                }\n              });\n            } else {\n              this.$message.error(\"不可操作！\");\n            }\n            //如果是项目经理\n          } else {\n            if (state1 == 0 && state2 == 2) {\n              allowMDetailE(work_num, order_id, strDate).then((res) => {\n                if (res.data.ret == 0) {\n                  this.getList();\n                }\n              });\n            } else {\n              this.$message.error(\"不可操作！\");\n            }\n          }\n        } else {\n          this.$message(\"已超过审批DDL！\");\n        }\n      } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n        var date = new Date();\n        var year = date.getFullYear();\n        var dateArr = [\n          date.getMonth() + 1,\n          date.getDate(),\n          date.getHours(),\n          date.getMinutes(),\n          date.getSeconds(),\n        ];\n        var strDate =\n          year +\n          \"/\" +\n          dateArr[0] +\n          \"/\" +\n          dateArr[1] +\n          \" \" +\n          dateArr[2] +\n          \":\" +\n          dateArr[3] +\n          \":\" +\n          dateArr[4];\n        //如果是质控专家\n        if (power == \"e\") {\n          if (state1 == 2) {\n            allowQDetailE(work_num, order_id, strDate).then((res) => {\n              if (res.data.ret == 0) {\n                this.getList();\n              }\n            });\n          } else {\n            this.$message.error(\"不可操作！\");\n          }\n          //如果是项目经理\n        } else {\n          if (state1 == 0 && state2 == 2) {\n            allowMDetailE(work_num, order_id, strDate).then((res) => {\n              if (res.data.ret == 0) {\n                this.getList();\n              }\n            });\n          } else {\n            this.$message.error(\"不可操作！\");\n          }\n        }\n      } else {\n        this.$message(\"已超过审批DDL！\");\n      }\n    },\n    //展示驳回表单\n    showRejectList(order_id, state1, state2, data_time) {\n      var nowDate = this.getNowDate();\n      var nowMonth = this.getNowMonth();\n      var nowWeek = this.getNowWeek();\n      var workDate = this.dateToNumber(data_time);\n      var workMonth = this.getWorkDateMonth(data_time);\n      var workDay = this.getWorkDateDay(data_time);\n      var workNum = Number(workMonth + \"\" + workDay);\n      if (nowMonth != workMonth) {\n        if (this.dataArray(workNum)) {\n          this.disallowVisible = true;\n          this.rejectForm.order_id = order_id;\n          this.rejectForm.state1 = state1;\n          this.rejectForm.state2 = state2;\n        } else {\n          this.$message(\"已超过审批DDL！\");\n        }\n      } else if (this.dataSub(nowWeek, nowDate, workDate)) {\n        this.disallowVisible = true;\n        this.rejectForm.order_id = order_id;\n        this.rejectForm.state1 = state1;\n        this.rejectForm.state2 = state2;\n      } else {\n        this.$message(\"已超过审批DDL！\");\n      }\n    },\n    //驳回审批\n    disallowList() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var dateArr = [\n        date.getMonth() + 1,\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n      ];\n      var strDate =\n        year +\n        \"/\" +\n        dateArr[0] +\n        \"/\" +\n        dateArr[1] +\n        \" \" +\n        dateArr[2] +\n        \":\" +\n        dateArr[3] +\n        \":\" +\n        dateArr[4];\n      if (this.power == \"e\") {\n        if (this.rejectForm.state1 == 2 && this.reject != \"\") {\n          disallowQDetailE(\n            this.id,\n            this.rejectForm.order_id,\n            strDate,\n            this.reject\n          ).then((res) => {\n            if (res.data.ret == 0) {\n              //关闭对话框\n              this.disallowVisible = false;\n              this.getList();\n              this.$message.success(\"操作成功！\");\n            }\n          });\n        } else {\n          this.$message.error(\"无法操作！\");\n        }\n      } else {\n        if (\n          this.rejectForm.state1 == 0 &&\n          this.rejectForm.state2 == 2 &&\n          this.reject != \"\"\n        ) {\n          disalloMDetailE(\n            this.id,\n            this.rejectForm.order_id,\n            strDate,\n            this.reject\n          ).then((res) => {\n            if (res.data.ret == 0) {\n              //关闭对话框\n              this.disallowVisible = false;\n              this.getList();\n              this.$message.success(\"操作成功！\");\n            } else {\n              this.$message.error(\"无法操作！\");\n            }\n          });\n        }\n      }\n    },\n    //同意审批批量\n    allowListAll(work_num, power) {\n      var date = new Date();\n      var year = date.getFullYear();\n      var dateArr = [\n        date.getMonth() + 1,\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n      ];\n      var strDate =\n        year +\n        \"/\" +\n        dateArr[0] +\n        \"/\" +\n        dateArr[1] +\n        \" \" +\n        dateArr[2] +\n        \":\" +\n        dateArr[3] +\n        \":\" +\n        dateArr[4];\n      if (power == \"e\") {\n        let total = this.multipleSelection.length;\n        //console.log(total）\n        var allList = new Array();\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].state1 == 2) {\n            var nowDate = this.getNowDate();\n            var nowMonth = this.getNowMonth();\n            var nowWeek = this.getNowWeek();\n            var workDate = this.dateToNumber(this.multipleSelection[i].data_time);\n            var workMonth = this.getWorkDateMonth(this.multipleSelection[i].data_time);\n            var workDay = this.getWorkDateDay(this.multipleSelection[i].data_time);\n            var workNum = Number(workMonth + \"\" + workDay);\n            if (nowMonth != workMonth){\n              if (this.dataArray(workNum)){\n                allList.push({\n              order_id: this.multipleSelection[i].order_id,\n              approver1: this.id,\n              state1: 0,\n              cause1: \"\",\n              appro_date1: strDate,\n            });\n              }\n            }else if (this.dataSub(nowWeek, nowDate, workDate)){\n              allList.push({\n              order_id: this.multipleSelection[i].order_id,\n              approver1: this.id,\n              state1: 0,\n              cause1: \"\",\n              appro_date1: strDate,\n            });\n            }\n          }\n        }\n        allowQDetailEAll(work_num, allList, total).then((res) => {\n          if (res.data.ret == 0) {\n            this.getList();\n            this.$message.success(\"已更新\");\n          }\n        });\n      } else {\n        let total = this.multipleSelection.length;\n        //console.log(total）\n        var allList = new Array();\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (\n            this.multipleSelection[i].state1 == 0 &&\n            this.multipleSelection[i].state2 == 2\n          ) {\n\n            var nowDate = this.getNowDate();\n            var nowMonth = this.getNowMonth();\n            var nowWeek = this.getNowWeek();\n            var workDate = this.dateToNumber(this.multipleSelection[i].data_time);\n            var workMonth = this.getWorkDateMonth(this.multipleSelection[i].data_time);\n            var workDay = this.getWorkDateDay(this.multipleSelection[i].data_time);\n            var workNum = Number(workMonth + \"\" + workDay);\n            if (nowMonth != workMonth){\n              if (this.dataArray(workNum)){\n                allList.push({\n              order_id: this.multipleSelection[i].order_id,\n              approver1: this.id,\n              state2: 0,\n              cause2: \"\",\n              appro_date1: strDate,\n            });\n              }\n            }else if (this.dataSub(nowWeek, nowDate, workDate)){\n              allList.push({\n              order_id: this.multipleSelection[i].order_id,\n              approver1: this.id,\n              state2: 0,\n              cause2: \"\",\n              appro_date1: strDate,\n            });\n            }\n          }\n        }\n        allowMDetailEAll(work_num, allList, total).then((res) => {\n          if (res.data.ret == 0) {\n            this.getList();\n            this.$message.success(\"已更新\");\n          }\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.emp-top {\n  display: flex;\n  justify-content: space-around;\n}\n.emp-top-des {\n  font-size: 18px;\n  font-weight: 600;\n  padding-top: 10px;\n}\n.emp-top-add {\n  padding-bottom: 1px;\n}\n\n.emp-data-des {\n  font-size: 15px;\n  font-weight: 600;\n  padding-top: 8px;\n}\n</style>\n"],"mappings":";AA6NA,SACAA,cAAA,EACAC,aAAA,EACAC,aAAA,EACAC,gBAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,gBAAA,QACA;AACA,SAAAC,QAAA;AACA,OAAAC,MAAA;AAEA;EACAC,KAAA;IACA;MACAC,aAAA;QACAC,aAAAC,IAAA;UACA,OAAAA,IAAA,CAAAC,OAAA,KAAAC,IAAA,CAAAC,GAAA;QACA;MACA;MACAC,QAAA;MACAC,WAAA;MACA;MACAC,SAAA;QACAC,QAAA;QACAC,KAAA;MACA;MACA;MACAC,iBAAA;MACAC,OAAA;MACAC,WAAA;MACA;MACAC,UAAA;MACAC,KAAA;MACAC,KAAA;MACA;MACAC,UAAA;MACA;MACAC,MAAA;MACA;MACAC,UAAA;MACA;MACAC,WAAA;MACA;MACAC,SAAA;MACA;MACAC,QAAA;MACA;MACAC,eAAA;MACA;MACAC,QAAA;MACA;MACAC,UAAA;MACA;MACAC,SAAA;MACA;MACAC,SAAA,GACA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MAEAC,SAAA,GACA;QACAF,KAAA;QACAC,KAAA;MACA,EACA;MACAE,SAAA,GACA;QACAH,KAAA;QACAC,KAAA;MACA,EACA;MACAG,OAAA,GACA;QACAJ,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MAEA;MACAI,OAAA;QACAxB,QAAA;QACAyB,SAAA;QACAC,YAAA;QACAC,YAAA;QACAC,aAAA;QACAC,OAAA;QACAC,SAAA;QACAC,WAAA;QACAC,YAAA;QACAC,cAAA;QACAC,cAAA;QACAC,WAAA;QACAC,aAAA;QACAC,iBAAA;QACAC,YAAA;QACAC,UAAA;QACAC,SAAA;QACAC,IAAA;QACAC,cAAA;QACAC,gBAAA;QACAC,iBAAA;QACAC,mBAAA;QACAC,mBAAA;QACAC,gBAAA;QACAC,kBAAA;QACAC,sBAAA;QACAC,iBAAA;QACAC,eAAA;QACAC,cAAA;QACAC,SAAA;QACAC,MAAA;MACA;MACA;MACAC,YAAA;QACA9B,SAAA,GACA;UAAA+B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAhC,YAAA,GACA;UAAA8B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA/B,YAAA,GACA;UAAA6B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA9B,aAAA,GACA;UAAA4B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,MAAA,GACA;UACAE,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACA7B,OAAA,GACA;UACA2B,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACA5B,SAAA,GACA;UAAA0B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA3B,WAAA,GACA;UAAAyB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA1B,YAAA,GACA;UAAAwB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAzB,cAAA,GACA;UAAAuB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAxB,cAAA,GACA;UAAAsB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAvB,WAAA,GACA;UACAqB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAtB,aAAA,GACA;UACAoB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACArB,iBAAA,GACA;UACAmB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACApB,YAAA,GACA;UACAkB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAnB,UAAA,GACA;UACAiB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAlB,SAAA,GACA;UAAAgB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAhB,cAAA,GACA;UACAc,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAf,gBAAA,GACA;UACAa,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAd,iBAAA,GACA;UACAY,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAb,mBAAA,GACA;UACAW,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAZ,mBAAA,GACA;UACAU,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAX,gBAAA,GACA;UACAS,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAV,kBAAA,GACA;UACAQ,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAT,sBAAA,GACA;UACAO,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAR,iBAAA,GACA;UACAM,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAP,eAAA,GACA;UACAK,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAN,cAAA,GACA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MAEA;MACA;MACAC,iBAAA;MACA;MACAC,MAAA;MACAC,QAAA;QACAC,EAAA;QACArC,SAAA;QACAC,YAAA;QACAC,YAAA;QACAC,aAAA;QACAC,OAAA;QACAC,SAAA;QACAC,WAAA;QACAC,YAAA;QACAC,cAAA;QACAC,cAAA;QACAC,WAAA;QACAC,aAAA;QACAC,iBAAA;QACAC,YAAA;QACAC,UAAA;QACAC,SAAA;QACAC,IAAA;QACAC,cAAA;QACAC,gBAAA;QACAC,iBAAA;QACAC,mBAAA;QACAC,mBAAA;QACAC,gBAAA;QACAC,kBAAA;QACAC,sBAAA;QACAC,iBAAA;QACAC,eAAA;QACAC,cAAA;QACAC,SAAA;MACA;MACA;MACAU,aAAA;QACApC,YAAA,GACA;UAAA6B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAhC,YAAA,GACA;UAAA8B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA5B,SAAA,GACA;UAAA0B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA3B,WAAA,GACA;UAAAyB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA1B,YAAA,GACA;UAAAwB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAzB,cAAA,GACA;UAAAuB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAxB,cAAA,GACA;UAAAsB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAvB,WAAA,GACA;UAAAqB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAtB,aAAA,GACA;UAAAoB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACArB,iBAAA,GACA;UACAmB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACApB,YAAA,GACA;UAAAkB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAnB,UAAA,GACA;UACAiB,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAlB,SAAA,GACA;UAAAgB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAM,aAAA,GACA;UAAAR,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAjC,SAAA,GACA;UAAA+B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EAEAO,QAAA;IACA,KAAAH,EAAA,GAAAI,IAAA,CAAAC,KAAA,CAAA/E,QAAA;IACA,KAAAoC,OAAA,CAAAxB,QAAA,GAAAkE,IAAA,CAAAC,KAAA,CAAA/E,QAAA;IACA;IACA,KAAAgF,OAAA;EACA;EACAC,OAAA;IACA;IACAC,sBAAAC,GAAA;MACA,KAAArE,iBAAA,GAAAqE,GAAA;IACA;IACA;IACAC,OAAA;MACA,KAAArE,OAAA;MACA,KAAAC,WAAA;MACA,KAAAqE,MAAA;IACA;IACAC,OAAA;MACA,KAAAvE,OAAA;MACA,KAAAC,WAAA;MACA,KAAAqE,MAAA;IACA;IACA;IACAL,QAAA;MACAvF,cAAA,CACA,KAAAiF,EAAA,EACA,KAAAnD,WAAA,EACA,KAAAE,QAAA,EACA,KAAAP,KAAA,EACA,KAAAC,KAAA,CACA,CAAAoE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;UACA,KAAAhF,QAAA,GAAA+E,GAAA,CAAAtF,IAAA,CAAAwF,SAAA;UACA,KAAApE,UAAA,GAAAkE,GAAA,CAAAtF,IAAA,CAAAyF,KAAA;UACA,KAAA/E,QAAA,GAAA4E,GAAA,CAAAtF,IAAA,CAAAU,QAAA;UACA,KAAAC,KAAA,GAAA2E,GAAA,CAAAtF,IAAA,CAAA0F,UAAA;QACA;MACA;IACA;IACAC,iBAAAV,GAAA;MACA;MACA,KAAA1D,QAAA,GAAA0D,GAAA;MACA;MACA,KAAA5D,WAAA;MACA;MACA,KAAAyD,OAAA;IACA;IACAc,oBAAAX,GAAA;MACA;MACA,KAAA5D,WAAA,GAAA4D,GAAA;MACA;MACA,KAAAH,OAAA;IACA;IACAK,OAAA;MACA,KAAA9D,WAAA;MACA,KAAAyD,OAAA;IACA;IACAe,QAAAhE,KAAA,EAAAiE,GAAA;MACA,OAAAA,GAAA,CAAAxD,aAAA,IAAAT,KAAA;IACA;IACAkE,QAAAlE,KAAA,EAAAiE,GAAA;MACA,OAAAA,GAAA,CAAAvD,OAAA,IAAAV,KAAA;IACA;IACAmE,UAAAxB,EAAA;MACA,KAAAyB,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACA5B,EAAA,EAAAA;QACA;MACA;IACA;IACA;IACA6B,WAAA;MACA,IAAAC,OAAA,GAAAvG,MAAA,GACAwG,MAAA,eACAC,OAAA;MACA,IAAAC,QAAA,GAAAC,MAAA,CAAAJ,OAAA;MACA;MACA,OAAAG,QAAA;IACA;IACA;IACAE,YAAA;MACA,IAAAC,IAAA,OAAAvG,IAAA;MACA,IAAAwG,KAAA,GAAAD,IAAA,CAAAE,QAAA;MACA;MACA,OAAAD,KAAA;IACA;IACA;IACAE,WAAA;MACA,IAAAzG,GAAA,OAAAD,IAAA;MACA,IAAA2G,GAAA,GAAA1G,GAAA,CAAA2G,MAAA;MACA;MACA,OAAAD,GAAA;IACA;IAEA;IACAE,aAAAN,IAAA;MACA,IAAAO,UAAA,GAAAP,IAAA,CAAAJ,OAAA;MACA,IAAAY,UAAA,GAAAV,MAAA,CAAAS,UAAA;MACA;MACA,OAAAC,UAAA;IACA;IACA;IACAC,iBAAAC,QAAA;MACA,IAAAT,KAAA,GAAAS,QAAA,CAAAC,KAAA;MACA,IAAAC,QAAA,GAAAd,MAAA,CAAAG,KAAA;MACA;MACA,OAAAW,QAAA;IACA;IACA;IACAC,eAAAH,QAAA;MACA,IAAAI,GAAA,GAAAJ,QAAA,CAAAC,KAAA;MACA,IAAAI,MAAA,GAAAjB,MAAA,CAAAgB,GAAA;MACA;MACA,OAAAC,MAAA;IACA;IACA;IACAC,QAAAC,IAAA,EAAAC,OAAA,EAAAR,QAAA;MACA,IAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA,WAAAO,IAAA,SAAAC,OAAA,GAAAR,QAAA;QACA;MACA;QACA;MACA;IACA;IACA;IACA;IACAS,cAAA;MACA,IAAAnB,IAAA,OAAAvG,IAAA;MACA;MACA,IAAA2H,OAAA,GAAApB,IAAA,CAAAK,MAAA;MACA,IAAAgB,UAAA,OAAA5H,IAAA,CACAuG,IAAA,CAAAxG,OAAA,4BAAA4H,OAAA,MACA;MACA;MACA,OAAAC,UAAA;IACA;IACA;IACAC,UAAAZ,QAAA;MACA,IAAAhH,GAAA,OAAAD,IAAA;MACA,IAAA8H,QAAA,GAAA7H,GAAA,CAAAwG,QAAA;MACA,IAAAgB,OAAA,GAAAxH,GAAA,CAAA8H,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAR,OAAA;MACA,IAAApB,MAAA,CAAAoB,OAAA;QACA;MACA;QACA,IAAAS,MAAA,GAAA7B,MAAA,CAAAyB,QAAA,QAAAL,OAAA;QACA,IAAAU,GAAA,OAAAC,KAAA;QACAD,GAAA,CAAAtC,IAAA,CAAAqC,MAAA;QACA,IAAAN,UAAA,QAAAF,aAAA;QACA,IAAAW,eAAA,GAAAT,UAAA,CAAAnB,QAAA;QACA,IAAA6B,cAAA,GAAAV,UAAA,CAAAG,OAAA;QACA,IAAAQ,aAAA,GAAAlC,MAAA,CAAAgC,eAAA,QAAAC,cAAA;QACA;;QAEA,IAAA/B,IAAA,GAAAtG,GAAA,CAAA8H,OAAA;QACA,IAAAS,OAAA,OAAAxI,IAAA,CAAAC,GAAA,CAAAwI,OAAA,CAAAlC,IAAA;QACA;QACA,IAAAmC,YAAA,GAAAF,OAAA,CAAA/B,QAAA;QACA,IAAAkC,WAAA,GAAAH,OAAA,CAAAT,OAAA;QACA,IAAAa,UAAA,GAAAvC,MAAA,CAAAqC,YAAA,QAAAC,WAAA;QACA;QACA,SAAAE,CAAA,GAAAN,aAAA,EAAAM,CAAA,IAAAD,UAAA,EAAAC,CAAA;UACAV,GAAA,CAAAtC,IAAA,CAAAgD,CAAA;QACA;QACAb,OAAA,CAAAC,GAAA,CAAAE,GAAA;QACA,IAAAA,GAAA,CAAAW,OAAA,CAAA7B,QAAA;UACA;QACA;UACA;QACA;MACA;IACA;IAEA;IACA8B,UAAA1I,QAAA,EAAAC,KAAA,EAAA0I,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAApH,SAAA;MACA,IAAA2F,OAAA,QAAAzB,UAAA;MACA,IAAA8B,QAAA,QAAAxB,WAAA;MACA,IAAA6C,OAAA,QAAAzC,UAAA;MACA,IAAAO,QAAA,QAAAJ,YAAA,CAAA/E,SAAA;MACA,IAAAsH,SAAA,QAAApC,gBAAA,CAAAlF,SAAA;MACA,IAAAuH,OAAA,QAAAjC,cAAA,CAAAtF,SAAA;MACA,IAAAwH,OAAA,GAAAjD,MAAA,CAAA+C,SAAA,QAAAC,OAAA;MACArB,OAAA,CAAAC,GAAA,CAAAqB,OAAA;MACAtB,OAAA,CAAAC,GAAA,CAAAH,QAAA;MACA,IAAAA,QAAA,IAAAsB,SAAA;QACA,SAAAvB,SAAA,CAAAyB,OAAA;UACA,IAAA/C,IAAA,OAAAvG,IAAA;UACA,IAAAuJ,IAAA,GAAAhD,IAAA,CAAAiD,WAAA;UACA,IAAAC,OAAA,IACAlD,IAAA,CAAAE,QAAA,QACAF,IAAA,CAAAwB,OAAA,IACAxB,IAAA,CAAAmD,QAAA,IACAnD,IAAA,CAAAoD,UAAA,IACApD,IAAA,CAAAqD,UAAA,GACA;UACA,IAAAC,OAAA,GACAN,IAAA,GACA,MACAE,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA;UACA;UACA,IAAAnJ,KAAA;YACA,IAAA2I,MAAA;cACA7J,aAAA,CAAAiB,QAAA,EAAA2I,QAAA,EAAAa,OAAA,EAAA7E,IAAA,CAAAC,GAAA;gBACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;kBACA,KAAAT,OAAA;gBACA;cACA;YACA;cACA,KAAAqF,QAAA,CAAAC,KAAA;YACA;YACA;UACA;YACA,IAAAd,MAAA,SAAAC,MAAA;cACA/J,aAAA,CAAAkB,QAAA,EAAA2I,QAAA,EAAAa,OAAA,EAAA7E,IAAA,CAAAC,GAAA;gBACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;kBACA,KAAAT,OAAA;gBACA;cACA;YACA;cACA,KAAAqF,QAAA,CAAAC,KAAA;YACA;UACA;QACA;UACA,KAAAD,QAAA;QACA;MACA,gBAAAvC,OAAA,CAAA4B,OAAA,EAAA1B,OAAA,EAAAR,QAAA;QACA,IAAAV,IAAA,OAAAvG,IAAA;QACA,IAAAuJ,IAAA,GAAAhD,IAAA,CAAAiD,WAAA;QACA,IAAAC,OAAA,IACAlD,IAAA,CAAAE,QAAA,QACAF,IAAA,CAAAwB,OAAA,IACAxB,IAAA,CAAAmD,QAAA,IACAnD,IAAA,CAAAoD,UAAA,IACApD,IAAA,CAAAqD,UAAA,GACA;QACA,IAAAC,OAAA,GACAN,IAAA,GACA,MACAE,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA;QACA;QACA,IAAAnJ,KAAA;UACA,IAAA2I,MAAA;YACA7J,aAAA,CAAAiB,QAAA,EAAA2I,QAAA,EAAAa,OAAA,EAAA7E,IAAA,CAAAC,GAAA;cACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;gBACA,KAAAT,OAAA;cACA;YACA;UACA;YACA,KAAAqF,QAAA,CAAAC,KAAA;UACA;UACA;QACA;UACA,IAAAd,MAAA,SAAAC,MAAA;YACA/J,aAAA,CAAAkB,QAAA,EAAA2I,QAAA,EAAAa,OAAA,EAAA7E,IAAA,CAAAC,GAAA;cACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;gBACA,KAAAT,OAAA;cACA;YACA;UACA;YACA,KAAAqF,QAAA,CAAAC,KAAA;UACA;QACA;MACA;QACA,KAAAD,QAAA;MACA;IACA;IACA;IACAE,eAAAhB,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAApH,SAAA;MACA,IAAA2F,OAAA,QAAAzB,UAAA;MACA,IAAA8B,QAAA,QAAAxB,WAAA;MACA,IAAA6C,OAAA,QAAAzC,UAAA;MACA,IAAAO,QAAA,QAAAJ,YAAA,CAAA/E,SAAA;MACA,IAAAsH,SAAA,QAAApC,gBAAA,CAAAlF,SAAA;MACA,IAAAuH,OAAA,QAAAjC,cAAA,CAAAtF,SAAA;MACA,IAAAwH,OAAA,GAAAjD,MAAA,CAAA+C,SAAA,QAAAC,OAAA;MACA,IAAAvB,QAAA,IAAAsB,SAAA;QACA,SAAAvB,SAAA,CAAAyB,OAAA;UACA,KAAAnI,eAAA;UACA,KAAAN,UAAA,CAAAmI,QAAA,GAAAA,QAAA;UACA,KAAAnI,UAAA,CAAAoI,MAAA,GAAAA,MAAA;UACA,KAAApI,UAAA,CAAAqI,MAAA,GAAAA,MAAA;QACA;UACA,KAAAY,QAAA;QACA;MACA,gBAAAvC,OAAA,CAAA4B,OAAA,EAAA1B,OAAA,EAAAR,QAAA;QACA,KAAA9F,eAAA;QACA,KAAAN,UAAA,CAAAmI,QAAA,GAAAA,QAAA;QACA,KAAAnI,UAAA,CAAAoI,MAAA,GAAAA,MAAA;QACA,KAAApI,UAAA,CAAAqI,MAAA,GAAAA,MAAA;MACA;QACA,KAAAY,QAAA;MACA;IACA;IACA;IACAG,aAAA;MACA,IAAA1D,IAAA,OAAAvG,IAAA;MACA,IAAAuJ,IAAA,GAAAhD,IAAA,CAAAiD,WAAA;MACA,IAAAC,OAAA,IACAlD,IAAA,CAAAE,QAAA,QACAF,IAAA,CAAAwB,OAAA,IACAxB,IAAA,CAAAmD,QAAA,IACAnD,IAAA,CAAAoD,UAAA,IACApD,IAAA,CAAAqD,UAAA,GACA;MACA,IAAAC,OAAA,GACAN,IAAA,GACA,MACAE,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA;MACA,SAAAnJ,KAAA;QACA,SAAAO,UAAA,CAAAoI,MAAA,cAAAnI,MAAA;UACAzB,gBAAA,CACA,KAAA8E,EAAA,EACA,KAAAtD,UAAA,CAAAmI,QAAA,EACAa,OAAA,EACA,KAAA/I,MAAA,CACA,CAAAkE,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;cACA;cACA,KAAA/D,eAAA;cACA,KAAAsD,OAAA;cACA,KAAAqF,QAAA,CAAAI,OAAA;YACA;UACA;QACA;UACA,KAAAJ,QAAA,CAAAC,KAAA;QACA;MACA;QACA,IACA,KAAAlJ,UAAA,CAAAoI,MAAA,SACA,KAAApI,UAAA,CAAAqI,MAAA,SACA,KAAApI,MAAA,QACA;UACAxB,eAAA,CACA,KAAA6E,EAAA,EACA,KAAAtD,UAAA,CAAAmI,QAAA,EACAa,OAAA,EACA,KAAA/I,MAAA,CACA,CAAAkE,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;cACA;cACA,KAAA/D,eAAA;cACA,KAAAsD,OAAA;cACA,KAAAqF,QAAA,CAAAI,OAAA;YACA;cACA,KAAAJ,QAAA,CAAAC,KAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAI,aAAA9J,QAAA,EAAAC,KAAA;MACA,IAAAiG,IAAA,OAAAvG,IAAA;MACA,IAAAuJ,IAAA,GAAAhD,IAAA,CAAAiD,WAAA;MACA,IAAAC,OAAA,IACAlD,IAAA,CAAAE,QAAA,QACAF,IAAA,CAAAwB,OAAA,IACAxB,IAAA,CAAAmD,QAAA,IACAnD,IAAA,CAAAoD,UAAA,IACApD,IAAA,CAAAqD,UAAA,GACA;MACA,IAAAC,OAAA,GACAN,IAAA,GACA,MACAE,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA,MACA,MACAA,OAAA;MACA,IAAAnJ,KAAA;QACA,IAAA8E,KAAA,QAAA7E,iBAAA,CAAA6J,MAAA;QACA;QACA,IAAAC,OAAA,OAAAjC,KAAA;QACA,SAAAS,CAAA,MAAAA,CAAA,QAAAtI,iBAAA,CAAA6J,MAAA,EAAAvB,CAAA;UACA,SAAAtI,iBAAA,CAAAsI,CAAA,EAAAI,MAAA;YACA,IAAAxB,OAAA,QAAAzB,UAAA;YACA,IAAA8B,QAAA,QAAAxB,WAAA;YACA,IAAA6C,OAAA,QAAAzC,UAAA;YACA,IAAAO,QAAA,QAAAJ,YAAA,MAAAtG,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAsH,SAAA,QAAApC,gBAAA,MAAAzG,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAuH,OAAA,QAAAjC,cAAA,MAAA7G,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAwH,OAAA,GAAAjD,MAAA,CAAA+C,SAAA,QAAAC,OAAA;YACA,IAAAvB,QAAA,IAAAsB,SAAA;cACA,SAAAvB,SAAA,CAAAyB,OAAA;gBACAe,OAAA,CAAAxE,IAAA;kBACAmD,QAAA,OAAAzI,iBAAA,CAAAsI,CAAA,EAAAG,QAAA;kBACAsB,SAAA,OAAAnG,EAAA;kBACA8E,MAAA;kBACAsB,MAAA;kBACAC,WAAA,EAAAX;gBACA;cACA;YACA,gBAAAtC,OAAA,CAAA4B,OAAA,EAAA1B,OAAA,EAAAR,QAAA;cACAoD,OAAA,CAAAxE,IAAA;gBACAmD,QAAA,OAAAzI,iBAAA,CAAAsI,CAAA,EAAAG,QAAA;gBACAsB,SAAA,OAAAnG,EAAA;gBACA8E,MAAA;gBACAsB,MAAA;gBACAC,WAAA,EAAAX;cACA;YACA;UACA;QACA;QACAtK,gBAAA,CAAAc,QAAA,EAAAgK,OAAA,EAAAjF,KAAA,EAAAJ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;YACA,KAAAT,OAAA;YACA,KAAAqF,QAAA,CAAAI,OAAA;UACA;QACA;MACA;QACA,IAAA9E,KAAA,QAAA7E,iBAAA,CAAA6J,MAAA;QACA;QACA,IAAAC,OAAA,OAAAjC,KAAA;QACA,SAAAS,CAAA,MAAAA,CAAA,QAAAtI,iBAAA,CAAA6J,MAAA,EAAAvB,CAAA;UACA,IACA,KAAAtI,iBAAA,CAAAsI,CAAA,EAAAI,MAAA,SACA,KAAA1I,iBAAA,CAAAsI,CAAA,EAAAK,MAAA,OACA;YAEA,IAAAzB,OAAA,QAAAzB,UAAA;YACA,IAAA8B,QAAA,QAAAxB,WAAA;YACA,IAAA6C,OAAA,QAAAzC,UAAA;YACA,IAAAO,QAAA,QAAAJ,YAAA,MAAAtG,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAsH,SAAA,QAAApC,gBAAA,MAAAzG,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAuH,OAAA,QAAAjC,cAAA,MAAA7G,iBAAA,CAAAsI,CAAA,EAAA/G,SAAA;YACA,IAAAwH,OAAA,GAAAjD,MAAA,CAAA+C,SAAA,QAAAC,OAAA;YACA,IAAAvB,QAAA,IAAAsB,SAAA;cACA,SAAAvB,SAAA,CAAAyB,OAAA;gBACAe,OAAA,CAAAxE,IAAA;kBACAmD,QAAA,OAAAzI,iBAAA,CAAAsI,CAAA,EAAAG,QAAA;kBACAsB,SAAA,OAAAnG,EAAA;kBACA+E,MAAA;kBACAuB,MAAA;kBACAD,WAAA,EAAAX;gBACA;cACA;YACA,gBAAAtC,OAAA,CAAA4B,OAAA,EAAA1B,OAAA,EAAAR,QAAA;cACAoD,OAAA,CAAAxE,IAAA;gBACAmD,QAAA,OAAAzI,iBAAA,CAAAsI,CAAA,EAAAG,QAAA;gBACAsB,SAAA,OAAAnG,EAAA;gBACA+E,MAAA;gBACAuB,MAAA;gBACAD,WAAA,EAAAX;cACA;YACA;UACA;QACA;QACArK,gBAAA,CAAAa,QAAA,EAAAgK,OAAA,EAAAjF,KAAA,EAAAJ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAtF,IAAA,CAAAuF,GAAA;YACA,KAAAT,OAAA;YACA,KAAAqF,QAAA,CAAAI,OAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}