{"ast":null,"code":"export default {\n  inserted(el, vDir, vNode) {\n    // vDir.value 有指令的参数\n    let content;\n    //按键按下=>只允许输入 数字/小数点\n    el.addEventListener(\"keypress\", event => {\n      let e = event || window.event;\n      let inputKey = String.fromCharCode(typeof e.charCode === 'number' ? e.charCode : e.keyCode);\n      let re = /\\d|\\./;\n      content = e.target.value;\n      //定义方法,阻止输入\n      function preventInput() {\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n      }\n      if (!re.test(inputKey) && !e.ctrlKey) {\n        preventInput();\n      } else if (content.indexOf(\".\") > 0 && inputKey == \".\") {\n        //已有小数点,再次输入小数点\n        preventInput();\n      }\n    });\n    //按键弹起=>并限制最大最小\n    el.addEventListener(\"keyup\", event => {\n      let e = event || window.event;\n      content = parseFloat(e.target.value);\n      if (!content) {\n        content = 0.00;\n      }\n      let arg_max = \"\";\n      let arg_min = \"\";\n      if (vDir.value) {\n        arg_max = parseFloat(vDir.value.max);\n        arg_min = parseFloat(vDir.value.min);\n      }\n      if (arg_max && content > arg_max) {\n        e.target.value = arg_max;\n        content = arg_max;\n      }\n      if (arg_min && content < arg_min) {\n        e.target.value = arg_min;\n        content = arg_min;\n      }\n    });\n    //失去焦点=>保留指定位小数\n    el.addEventListener(\"focusout\", event => {\n      //此处会在 el-input 的 @change 后执行\n      let e = event || window.event;\n      content = parseFloat(e.target.value);\n      if (!content) {\n        content = 0.00;\n      }\n      let arg_precision = 0; //默认保留至整数\n      if (vDir.value.precision) {\n        arg_precision = parseFloat(vDir.value.precision);\n      }\n      e.target.value = content.toFixed(arg_precision);\n      // -- callback写法1\n      // vNode.data.model.callback = ()=>{\n      //     e.target.value = content.toFixed(arg_precision)\n      // }\n      // vNode.data.model.callback();\n      // -- callback 写法2\n      // vNode.data.model.callback(\n      //     e.target.value = content.toFixed(arg_precision)\n      // )\n    });\n  }\n};","map":{"version":3,"names":["inserted","el","vDir","vNode","content","addEventListener","event","e","window","inputKey","String","fromCharCode","charCode","keyCode","re","target","value","preventInput","preventDefault","returnValue","test","ctrlKey","indexOf","parseFloat","arg_max","arg_min","max","min","arg_precision","precision","toFixed"],"sources":["/Users/user/Desktop/masms3.0/mouse3.0/src/directive/el-input/onlyNumber.js"],"sourcesContent":["export default {\n    inserted(el,vDir, vNode) {\n        // vDir.value 有指令的参数\n        let content;\n        //按键按下=>只允许输入 数字/小数点\n        el.addEventListener(\"keypress\", event => {\n            let e = event || window.event;\n            let inputKey = String.fromCharCode(typeof e.charCode === 'number' ? e.charCode : e.keyCode);\n            let re = /\\d|\\./;\n            content = e.target.value;\n            //定义方法,阻止输入\n            function preventInput(){\n                if (e.preventDefault) {\n                    e.preventDefault();\n                } else {\n                    e.returnValue = false;\n                }\n            }\n            if (!re.test(inputKey) && !e.ctrlKey) {\n                preventInput();\n            } else if (content.indexOf(\".\") > 0 && inputKey == \".\") {\n                //已有小数点,再次输入小数点\n                preventInput();\n            }\n        });\n        //按键弹起=>并限制最大最小\n        el.addEventListener(\"keyup\",event => {\n            let e = event || window.event;\n            content = parseFloat(e.target.value);\n            if (!content) {\n                content = 0.00;\n            }\n            let arg_max = \"\";\n            let arg_min = \"\";\n            if (vDir.value) {\n                arg_max = parseFloat(vDir.value.max);\n                arg_min = parseFloat(vDir.value.min);\n            }\n            if(arg_max && content > arg_max){\n                e.target.value = arg_max;\n                content = arg_max;\n            }\n            if(arg_min && content < arg_min){\n                e.target.value = arg_min;\n                content = arg_min;\n            }\n        });\n        //失去焦点=>保留指定位小数\n        el.addEventListener(\"focusout\",event=>{//此处会在 el-input 的 @change 后执行\n            let e = event || window.event;\n            content = parseFloat(e.target.value);\n            if (!content) {\n                content = 0.00;\n            }\n            let arg_precision = 0;//默认保留至整数\n            if (vDir.value.precision) {\n                arg_precision = parseFloat(vDir.value.precision);\n            }\n            e.target.value = content.toFixed(arg_precision);\n            // -- callback写法1\n            // vNode.data.model.callback = ()=>{\n            //     e.target.value = content.toFixed(arg_precision)\n            // }\n            // vNode.data.model.callback();\n            // -- callback 写法2\n            // vNode.data.model.callback(\n            //     e.target.value = content.toFixed(arg_precision)\n            // )\n        })\n    }\n}"],"mappings":"AAAA,eAAe;EACXA,QAAQA,CAACC,EAAE,EAACC,IAAI,EAAEC,KAAK,EAAE;IACrB;IACA,IAAIC,OAAO;IACX;IACAH,EAAE,CAACI,gBAAgB,CAAC,UAAU,EAAEC,KAAK,IAAI;MACrC,IAAIC,CAAC,GAAGD,KAAK,IAAIE,MAAM,CAACF,KAAK;MAC7B,IAAIG,QAAQ,GAAGC,MAAM,CAACC,YAAY,CAAC,OAAOJ,CAAC,CAACK,QAAQ,KAAK,QAAQ,GAAGL,CAAC,CAACK,QAAQ,GAAGL,CAAC,CAACM,OAAO,CAAC;MAC3F,IAAIC,EAAE,GAAG,OAAO;MAChBV,OAAO,GAAGG,CAAC,CAACQ,MAAM,CAACC,KAAK;MACxB;MACA,SAASC,YAAYA,CAAA,EAAE;QACnB,IAAIV,CAAC,CAACW,cAAc,EAAE;UAClBX,CAAC,CAACW,cAAc,EAAE;QACtB,CAAC,MAAM;UACHX,CAAC,CAACY,WAAW,GAAG,KAAK;QACzB;MACJ;MACA,IAAI,CAACL,EAAE,CAACM,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACF,CAAC,CAACc,OAAO,EAAE;QAClCJ,YAAY,EAAE;MAClB,CAAC,MAAM,IAAIb,OAAO,CAACkB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIb,QAAQ,IAAI,GAAG,EAAE;QACpD;QACAQ,YAAY,EAAE;MAClB;IACJ,CAAC,CAAC;IACF;IACAhB,EAAE,CAACI,gBAAgB,CAAC,OAAO,EAACC,KAAK,IAAI;MACjC,IAAIC,CAAC,GAAGD,KAAK,IAAIE,MAAM,CAACF,KAAK;MAC7BF,OAAO,GAAGmB,UAAU,CAAChB,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAC;MACpC,IAAI,CAACZ,OAAO,EAAE;QACVA,OAAO,GAAG,IAAI;MAClB;MACA,IAAIoB,OAAO,GAAG,EAAE;MAChB,IAAIC,OAAO,GAAG,EAAE;MAChB,IAAIvB,IAAI,CAACc,KAAK,EAAE;QACZQ,OAAO,GAAGD,UAAU,CAACrB,IAAI,CAACc,KAAK,CAACU,GAAG,CAAC;QACpCD,OAAO,GAAGF,UAAU,CAACrB,IAAI,CAACc,KAAK,CAACW,GAAG,CAAC;MACxC;MACA,IAAGH,OAAO,IAAIpB,OAAO,GAAGoB,OAAO,EAAC;QAC5BjB,CAAC,CAACQ,MAAM,CAACC,KAAK,GAAGQ,OAAO;QACxBpB,OAAO,GAAGoB,OAAO;MACrB;MACA,IAAGC,OAAO,IAAIrB,OAAO,GAAGqB,OAAO,EAAC;QAC5BlB,CAAC,CAACQ,MAAM,CAACC,KAAK,GAAGS,OAAO;QACxBrB,OAAO,GAAGqB,OAAO;MACrB;IACJ,CAAC,CAAC;IACF;IACAxB,EAAE,CAACI,gBAAgB,CAAC,UAAU,EAACC,KAAK,IAAE;MAAC;MACnC,IAAIC,CAAC,GAAGD,KAAK,IAAIE,MAAM,CAACF,KAAK;MAC7BF,OAAO,GAAGmB,UAAU,CAAChB,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAC;MACpC,IAAI,CAACZ,OAAO,EAAE;QACVA,OAAO,GAAG,IAAI;MAClB;MACA,IAAIwB,aAAa,GAAG,CAAC,CAAC;MACtB,IAAI1B,IAAI,CAACc,KAAK,CAACa,SAAS,EAAE;QACtBD,aAAa,GAAGL,UAAU,CAACrB,IAAI,CAACc,KAAK,CAACa,SAAS,CAAC;MACpD;MACAtB,CAAC,CAACQ,MAAM,CAACC,KAAK,GAAGZ,OAAO,CAAC0B,OAAO,CAACF,aAAa,CAAC;MAC/C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}