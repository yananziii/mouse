{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { setToken, getCookie } from \"../utils/setToken.js\";\nimport { login, register } from \"../api/api.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.addForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      //登陆表单的数据绑定对象\n      loginForm: {\n        work_num: \"\",\n        //工号\n        password: \"\" //密码\n      },\n\n      //这是表单验证规则对象\n      loginFromRules: {\n        //验证工号是否合法\n        work_num: [{\n          required: true,\n          message: \"请输入工号\",\n          trigger: \"blur\"\n        }, {\n          min: 8,\n          max: 10,\n          message: \"工号长度在 8 到 10 个字符\",\n          trigger: \"blur\"\n        }],\n        //验证密码是否合法,必须由数字和字母组成，且字符长度为8-20位\n        password: [{\n          required: true,\n          message: \"请输入登陆密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /(^(?![0-9]+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,20}$)/,\n          message: \"请输入正确密码格式\"\n        }]\n      },\n      //注册用户表单\n      addForm: {\n        first_name: \"\",\n        sex: \"\",\n        username: \"\",\n        email: \"\",\n        team_group: \"\",\n        work_role: \"\",\n        work_time: \"\",\n        university: \"\",\n        password: \"\",\n        password1: \"\"\n      },\n      addDialogVisible: false,\n      //注册用户表单规则\n      addFormRules: {\n        first_name: [{\n          required: true,\n          message: \"姓名为必填项！\",\n          trigger: \"blur\"\n        }],\n        username: [{\n          required: true,\n          message: \"工号为必填项！\",\n          trigger: \"blur\"\n        }, {\n          min: 8,\n          max: 10,\n          message: \"工号长度在 8 到 10 个字符\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"邮箱为必填项！\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\n          message: \"请输入正确邮箱格式\"\n        }],\n        sex: [{\n          required: true,\n          message: \"性别为必填项！\",\n          trigger: \"blur\"\n        }],\n        team_group: [{\n          required: true,\n          message: \"团队组别为必填项！\",\n          trigger: \"blur\"\n        }],\n        work_role: [{\n          required: true,\n          message: \"工作角色为必填项！\",\n          trigger: \"blur\"\n        }],\n        work_time: [{\n          required: true,\n          message: \"入职时间为必填项！\",\n          trigger: \"blur\"\n        }],\n        university: [{\n          required: true,\n          message: \"学院专业为必填项！\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"密码为必填项！\",\n          trigger: \"blur\"\n        }, {\n          pattern: /(^(?![0-9]+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,20}$)/,\n          message: \"请输入正确密码格式\"\n        }],\n        password1: [{\n          required: true,\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    /* 重置登陆表单 */\n    resetLoginForm() {\n      //console.log(this)\n      this.$refs.loginFormRef.resetFields();\n    },\n    //登陆\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return;\n        login(this.loginForm).then(res => {\n          if (res.data.ret == 0) {\n            setToken(\"work_num\", this.loginForm.work_num);\n            //setToken(\"admin_token\", JSON.stringify(res.data.ALG));\n            this.$router.push({\n              name: \"/Notice\"\n            }, () => {});\n          }\n        });\n        /*                 const{ data: res } = await this.$http.post('common/login?work_num='+this.loginForm.work_num,\n                {   \"action\":\"signin\",\n                    \"data\":this.loginForm\n                });\n                if(res.ret !== 0) return this.$message.error('登陆失败');\n                this.$message.success('登陆成功');\n        /*            登陆成功后的work_num保存到客户端的localStorage中  */\n        //window.localStorage.setItem(\"work_num\", this.loginForm.work_num);\n        //setToken(\"work_num\", this.loginForm.work_num)\n        //window.localStorage.setItem(\"admin_token\", JSON.stringify(res.ALG))\n        //setToken(\"admin_token\", JSON.stringify(res.ALG))\n        //this.$router.push('/Information'); */\n      });\n    },\n\n    //新增用户\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return;\n        register(this.addForm).then(res => {\n          if (res.data.ret == 0) {\n            this.addDialogVisible = false;\n            this.addDialogClosed();\n            this.$message.success(\"注册成功\");\n          }\n        });\n        /*                 const{data :res } = await this.$http.post('common/register',\n                    {\n        \"action\":\"add_user\",\n        \"data\":this.addForm}\n                )\n                if(res.ret !== 0) return this.$message.error('注册失败');\n                this.$message.success('注册成功');\n                this.addDialogVisible=false */\n      });\n    },\n\n    /* 监听注册用户对话框关闭重置 */\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //添加表单更改日期格式\n    getAddDate(date) {\n      this.addForm.work_time = date;\n    }\n  }\n};","map":{"version":3,"names":["setToken","getCookie","login","register","name","data","validatePass2","rule","value","callback","Error","addForm","password","loginForm","work_num","loginFromRules","required","message","trigger","min","max","pattern","first_name","sex","username","email","team_group","work_role","work_time","university","password1","addDialogVisible","addFormRules","validator","methods","resetLoginForm","$refs","loginFormRef","resetFields","validate","valid","then","res","ret","$router","push","addUser","addFormRef","addDialogClosed","$message","success","getAddDate","date"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!--  头像区域 -->\n      <div class=\"avatar_box\">\n        <img src=\"../assets/mouse.jpg\" />\n      </div>\n      <!-- 登陆表单区域 -->\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginFromRules\"\n        label-width=\"0px\"\n        class=\"login_form\"\n      >\n        <!--  工号 -->\n        <el-form-item prop=\"work_num\">\n          <el-input\n            v-model=\"loginForm.work_num\"\n            prefix-icon=\"el-icon-user\"\n            @keyup.enter.native=\"login\"\n            plachehold=\"工号\"\n          ></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n            @keyup.enter.native=\"login\"\n            plachehold=\"密码\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <span class=\"forgot_passwd\">\n          <a href=\"passwd\" target=\"_blank\">忘记密码？</a>\n        </span>\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n          <el-button type=\"success\" @click=\"addDialogVisible = true\"\n            >注册</el-button\n          >\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!--     注册用户填写表单 -->\n    <el-dialog\n      title=\"用户注册\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"姓名\" prop=\"first_name\">\n          <el-input v-model=\"addForm.first_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"sex\">\n          <el-input v-model=\"addForm.sex\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"工号\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"办公邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"组别\" prop=\"team_group\">\n          <el-select v-model=\"addForm.team_group\">\n            <el-option label=\"项目交付1小组\" value=\"x1\"></el-option>\n            <el-option label=\"项目交付2小组\" value=\"x2\"></el-option>\n            <el-option label=\"项目交付3小组\" value=\"x3\"></el-option>\n            <el-option label=\"项目交付4小组\" value=\"x4\"></el-option>\n            <el-option label=\"项目交付5小组\" value=\"x5\"></el-option>\n            <el-option label=\"项目交付6小组\" value=\"x6\"></el-option>\n            <el-option label=\"项目交付7小组\" value=\"x7\"></el-option>\n            <el-option label=\"综合标注1小组\" value=\"z1\"></el-option>\n            <el-option label=\"综合标注2小组\" value=\"z2\"></el-option>\n            <el-option label=\"综合标注3小组\" value=\"z3\"></el-option>\n            <el-option label=\"综合标注4小组\" value=\"z4\"></el-option>\n            <el-option label=\"项资运营组\" value=\"y\"></el-option>\n            <el-option label=\"流量推荐评测1小组\" value=\"m1\"></el-option>\n            <el-option label=\"模型策略运营1小组\" value=\"m2\"></el-option>\n            <el-option label=\"搜索策略评估1小组\" value=\"m3\"></el-option>\n            <el-option label=\"其他\" value=\"other\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"员工类别\" prop=\"work_role\">\n          <el-select v-model=\"addForm.work_role\">\n            <el-option label=\"标注专员\" value=\"标注专员\"></el-option>\n            <el-option label=\"质量专员\" value=\"质量专员\"></el-option>\n            <el-option label=\"质控专家\" value=\"质控专家\"></el-option>\n            <el-option label=\"项资运营岗\" value=\"项资运营岗\"></el-option>\n            <el-option label=\"管理岗\" value=\"管理岗\"></el-option>\n            <el-option label=\"模型运维专家\" value=\"模型运维专家\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"入职时间\" prop=\"work_time\">\n          <el-date-picker\n            type=\"date\"\n            placeholder=\"选择日期\"\n            v-model=\"addForm.work_time\"\n            style=\"width: 100%\"\n            format=\"yyyy-MM-dd\"\n            value-format=\"yyyy-MM-dd\"\n            @change=\"getAddDate\"\n          >\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"学院专业\" prop=\"university\">\n          <el-input v-model=\"addForm.university\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"addForm.password\"\n            type=\"password\"\n            placeholder=\"由字母和数字组成的8-20位字符串！\"\n            show-password\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"password1\">\n          <el-input\n            v-model=\"addForm.password1\"\n            type=\"password\"\n            show-password\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"\n            addDialogVisible = false;\n            addDialogClosed();\n          \"\n          >取 消</el-button\n        >\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n import { setToken ,getCookie } from \"../utils/setToken.js\"; \nimport { login, register,} from \"../api/api.js\";\n\nexport default {\n  name: \"Login\",\n  data() {\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.addForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      //登陆表单的数据绑定对象\n      loginForm: {\n        work_num: \"\", //工号\n        password: \"\", //密码\n      },\n      //这是表单验证规则对象\n      loginFromRules: {\n        //验证工号是否合法\n        work_num: [\n          { required: true, message: \"请输入工号\", trigger: \"blur\" },\n          {\n            min: 8,\n            max: 10,\n            message: \"工号长度在 8 到 10 个字符\",\n            trigger: \"blur\",\n          },\n        ],\n        //验证密码是否合法,必须由数字和字母组成，且字符长度为8-20位\n        password: [\n          { required: true, message: \"请输入登陆密码\", trigger: \"blur\" },\n          {\n            pattern: /(^(?![0-9]+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,20}$)/,\n            message: \"请输入正确密码格式\",\n          },\n        ],\n      },\n      //注册用户表单\n      addForm: {\n        first_name: \"\",\n        sex: \"\",\n        username: \"\",\n        email: \"\",\n        team_group: \"\",\n        work_role: \"\",\n        work_time: \"\",\n        university: \"\",\n        password: \"\",\n        password1: \"\",\n      },\n      addDialogVisible: false,\n      //注册用户表单规则\n      addFormRules: {\n        first_name: [\n          { required: true, message: \"姓名为必填项！\", trigger: \"blur\" },\n        ],\n        username: [\n          { required: true, message: \"工号为必填项！\", trigger: \"blur\" },\n          {\n            min: 8,\n            max: 10,\n            message: \"工号长度在 8 到 10 个字符\",\n            trigger: \"blur\",\n          },\n        ],\n        email: [\n          { required: true, message: \"邮箱为必填项！\", trigger: \"blur\" },\n          {\n            pattern: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\n            message: \"请输入正确邮箱格式\",\n          },\n        ],\n        sex: [{ required: true, message: \"性别为必填项！\", trigger: \"blur\" }],\n        team_group: [\n          { required: true, message: \"团队组别为必填项！\", trigger: \"blur\" },\n        ],\n        work_role: [\n          { required: true, message: \"工作角色为必填项！\", trigger: \"blur\" },\n        ],\n        work_time: [\n          { required: true, message: \"入职时间为必填项！\", trigger: \"blur\" },\n        ],\n        university: [\n          { required: true, message: \"学院专业为必填项！\", trigger: \"blur\" },\n        ],\n        password: [\n          { required: true, message: \"密码为必填项！\", trigger: \"blur\" },\n          {\n            pattern: /(^(?![0-9]+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,20}$)/,\n            message: \"请输入正确密码格式\",\n          },\n        ],\n        password1: [\n          { required: true, validator: validatePass2, trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    /* 重置登陆表单 */\n    resetLoginForm() {\n      //console.log(this)\n      this.$refs.loginFormRef.resetFields();\n    },\n    //登陆\n    login() {\n      this.$refs.loginFormRef.validate(async (valid) => {\n        if (!valid) return;\n        login(this.loginForm).then((res) => {\n          if (res.data.ret == 0) {\n            setToken(\"work_num\", this.loginForm.work_num);\n            //setToken(\"admin_token\", JSON.stringify(res.data.ALG));\n            this.$router.push({\n             name: \"/Notice\"\n            },() =>{});\n          }\n        });\n        /*                 const{ data: res } = await this.$http.post('common/login?work_num='+this.loginForm.work_num,\n                {   \"action\":\"signin\",\n                    \"data\":this.loginForm\n                });\n                if(res.ret !== 0) return this.$message.error('登陆失败');\n                this.$message.success('登陆成功');\n     /*            登陆成功后的work_num保存到客户端的localStorage中  */\n        //window.localStorage.setItem(\"work_num\", this.loginForm.work_num);\n        //setToken(\"work_num\", this.loginForm.work_num)\n        //window.localStorage.setItem(\"admin_token\", JSON.stringify(res.ALG))\n        //setToken(\"admin_token\", JSON.stringify(res.ALG))\n        //this.$router.push('/Information'); */\n      });\n    },\n    //新增用户\n    addUser() {\n      this.$refs.addFormRef.validate(async (valid) => {\n        if (!valid) return;\n        register(this.addForm).then((res) => {\n          if (res.data.ret == 0) {\n            this.addDialogVisible = false;\n            this.addDialogClosed();\n            this.$message.success(\"注册成功\");\n          }\n        });\n        /*                 const{data :res } = await this.$http.post('common/register',\n                    {\n\t\"action\":\"add_user\",\n\t\"data\":this.addForm}\n                )\n                if(res.ret !== 0) return this.$message.error('注册失败');\n                this.$message.success('注册成功');\n                this.addDialogVisible=false */\n      });\n    },\n    /* 监听注册用户对话框关闭重置 */\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //添加表单更改日期格式\n    getAddDate(date) {\n      this.addForm.work_time = date;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #f4a6ba;\n  height: 100%;\n}\n\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.avatar_box {\n  height: 130px;\n  width: 130px;\n  border: 1px solid #eee;\n  border-radius: 50%;\n  padding: 10px;\n  box-shadow: 0 0 10px #ff0000;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #eee;\n  }\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.el-button--primary {\n  background: #a5d3e8 !important;\n  border-color: #a5d3e8 !important;\n}\n.el-button--info {\n  background: #f4e888 !important;\n  border-color: #f4e888 !important;\n}\n.el-button--success {\n  background: #9fd4b1 !important;\n  border-color: #9fd4b1 !important;\n}\n.el-button--danger {\n  background: #d98a62 !important;\n  border-color: #d98a62 !important;\n}\n\n.forgot_passwd {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}